#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void swap(const char **a, const char **b) {
    const char *temp = *a;
    *a = *b;
    *b = temp;
}
void string_sort(const char **arr, const int cnt, int (*cmp_func)(const char *, const char *)) {
    for (int i = 0; i < cnt - 1; i++) {
        for (int j = 0; j < cnt - i - 1; j++) {
            if (cmp_func(arr[j], arr[j + 1]) > 0) {
                swap(&arr[j], &arr[j + 1]);
            }
        }
    }
}
int lexicographic_sort(const char *a, const char *b) {
    return strcmp(a, b);
}
int lexicographic_sort_reverse(const char *a, const char *b) {
    return strcmp(b, a);
}
int count_distinct_characters(const char *str) {
    int count[26] = {0}, distinct = 0;
    while (*str) {
        if (!count[*str - 'a']) {
            distinct++;
            count[*str - 'a'] = 1;
        }
        str++;
    }
    return distinct;
}
int sort_by_number_of_distinct_characters(const char *a, const char *b) {
    int da = count_distinct_characters(a);
    int db = count_distinct_characters(b);
    return (da == db) ? strcmp(a, b) : (da - db);
}
int sort_by_length(const char *a, const char *b) {
    int la = strlen(a), lb = strlen(b);
    return (la == lb) ? strcmp(a, b) : (la - lb);
}

int main() 
{
    int n;
    scanf("%d", &n);
  
    char** arr;
	arr = (char**)malloc(n * sizeof(char*));
  
    for(int i = 0; i < n; i++){
        *(arr + i) = malloc(1024 * sizeof(char));
        scanf("%s", *(arr + i));
        *(arr + i) = realloc(*(arr + i), strlen(*(arr + i)) + 1);
    }
  
    string_sort(arr, n, lexicographic_sort);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);
    printf("\n");

    string_sort(arr, n, lexicographic_sort_reverse);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");

    string_sort(arr, n, sort_by_length);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);    
    printf("\n");

    string_sort(arr, n, sort_by_number_of_distinct_characters);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");
}
